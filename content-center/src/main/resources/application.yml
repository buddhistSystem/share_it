server:
  port: 8090

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/content_center?characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
        cluster-name: beijing
    # 使用ahas则不需要以下配置，目前使用本地sentinel
    sentinel:
      transport:
        # 指定sentinel控制台地址
        dashboard: localhost:8080
        # 指定和控制台通信的ip，如果不指定会自动选择一个ip注册
        #client-ip: 127.0.0.1
        # 指定该客户端和sentinel控制台通信端口，如果不指定，会从8719开始扫描，依次加一，直到找到未被占用的端口
        #port: 8719
        # 发送sentinel控制台心跳周期，默认10s
        #heartbeat-interval-ms: 10000
    # 配置spring-cloud-stream
    stream:
      rocketmq:
        binder:
          name-server: 127.0.0.1:9876
        bindings:
          output:
            producer:
              transactionl: true
              # 使用 stream编程模型有问题为解决
              #group: stream-add-bonus-group
      bindings:
        output:
          # 指定topic
          destination: stream-add-bonus
  profiles:
    active: dev
  application:
    name: content-center
  zipkin:
    base-url: http://127.0.0.1:9411/
  sleuth:
    sampler:
      #抽样率，默认0.1
      probability: 1.0

logging:
  level:
    com.demo.contentcenter.feignclient.UserCenterFeignClient: debug
    # sleuth打印debug日志
    org.springframework.cloud.sleuth: debug
feign:
  client:
    config:
      default:
        loggerLevel: full
        # 配置feign拦截器,用户传递token
        requestInterceptors:
          - com.demo.contentcenter.feignclient.interceptor.TokenRelayRequestInterceptor
  #配置feign使用httpclient进行请求，而不是UrlConnection，urlConnection不能使用连接池，使用httpclient性能提升15%左右
  httpclient:
    enabled: true
    # feign最大连接数
    max-connections: 200
    # feign单个请求最大连接数
    max-connections-per-route: 50
  # feign 客户端集成sentinel
  sentinel:
    enabled: true
#配置ribbon饥饿加载，默认懒加载
ribbon:
  eager-load:
    clients: user-center
    enabled: true

# 配置actuator暴露节点
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# 配置rocketmq
rocketmq:
  name-server: 127.0.0.1:9876
  producer:
    # 必须指定group
    group: rocketmq-group

# jwt配置
jwt:
  secret: aabbccddee
  # 有效期，单位秒，默认2周
  expire-time-in-second: 1209600

#ahas配置
#指定您要接入的特定的AHAS环境。
#ahas:
#  namespace: default
#  license: 4ca03f190009418ca461aa4351472e0c
#自定义您的应用名称。
#project.name: content-center



# 配置指定服务user-center的负载均衡策略,目前使用代码全局配置，暂时弃用
#user-center:
#  ribbon:
#    # 代表Ribbon使用的负载均衡策略
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#    # 每台服务器最多重试次数，但是首次调用不包括在内， Max number of retries on the same server (excluding the first try)
#    MaxAutoRetries: 1
#    # 最多重试多少台服务器，Max number of next servers to retry (excluding the first server)
#    MaxAutoRetriesNextServer: 1
#    # 无论是请求超时或者socket read timeout都进行重试，Whether all operations can be retried for this client
#    OkToRetryOnAllOperations: true
#    # Interval to refresh the server list from the source
#    ServerListRefreshInterval: 2000
#    # Connect timeout used by Apache HttpClient
#    ConnectTimeout: 3000
#    # Read timeout used by Apache HttpClient
#    ReadTimeout: 3000
